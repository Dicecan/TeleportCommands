plugins {
    id 'multiloader-common'
}

configurations {
    commonJava{
        canBeResolved = true
    }
    commonResources{
        canBeResolved = true
    }
}

dependencies {
    compileOnly(project(':common')) {
        capabilities {
            requireCapability "$group:$mod_id"
        }
    }
    commonJava project(path: ':common', configuration: 'commonJava')
    commonResources project(path: ':common', configuration: 'commonResources')
}

tasks.named('compileJava', JavaCompile) {
    doFirst {
        fileTree('src/main/java').matching {
            include 'path/to/TeleportCommands.java'
        }.each { File file ->
            def text = file.text
            text = text.replace('${version}', project.version.toString())
                    .replace('${mod_id}', mod_id.toString())
                    .replace('${mod_name}', mod_name.toString())
            file.text = text
        }
    }
    dependsOn(configurations.commonJava)
    source(configurations.commonJava)
}

processResources {
    dependsOn(configurations.commonResources)
    from(configurations.commonResources)
}